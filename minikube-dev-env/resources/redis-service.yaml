# -- ConfigMap
kind: ConfigMap
apiVersion: v1
metadata:
  name: redis-config
  labels:
    app: redis
data:
  redis.conf: |-
    dir /data/redis
    port 6379
    tcp-backlog 511
    bind 0.0.0.0
    appendonly yes
    appendfsync everysec
    protected-mode no
    requirepass 123456
    maxclients 1000
    pidfile /data/redis/redis-6379.pid

---
# -- Persistent Volume

apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv-volume
  labels:
    type: local
    app: redis
spec:
  storageClassName: manual
  capacity:
    storage: 200Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/redis"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
  selector:
    matchLabels:
      app: redis

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
      role: master
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      # initContainers:
      #   - name: system-init
      #     image: busybox:1.32
      #     imagePullPolicy: IfNotPresent
      #     command: 
      #       - "sh"
      #       - "-c"
      #       - "echo 2000 > /proc/sys/net/core/somaxconn && echo never > /sys/kernel/mm/transparent_hugepage/enabled"
      #     securityContext:
      #       privileged: true
      #       runAsUser: 0
      #     volumeMounts:
      #       - name: sys
      #         mountPath: /sys
      containers:
      - image: redis:5
        name: redis
        command:
        - "sh"
        - "-c"
        - "redis-server /data/conf/redis.conf"
        resources:
          limits:
            memory: 200Mi
        ports:
        - containerPort: 6379
        volumeMounts:
        - mountPath: /data/redis
          name: data
        - mountPath: /data/conf/redis.conf
          name: config
          subPath: redis.conf
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: redis-pv-claim
      - name: config      
        configMap:
          name: redis-config

---

apiVersion: v1
kind: Service
metadata:
  name: redis
  labels:
    app: redis
    env: dev
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    nodePort: 30379
  type: NodePort
